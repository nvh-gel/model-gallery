plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.eden'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

jib {
    from {
        image = 'openjdk:17-slim'
    }
    to {
        image = 'nvhien2703/model-gallery'
        tags = [version, 'latest']
        auth {
            username = System.getenv('DOCKER_USERNAME')
            password = System.getenv('DOCKER_PASSWORD')
        }
    }
    container {
        mainClass = "${group}.gallery.ModelGalleryApplication"
        ports = ['8080']
        environment = [
                'VERSION': version,
                'APPLICATION_PORT': '8080',
                'DEVELOPMENT_MODE': 'false'
        ]
    }
}

file("versions.properties").withReader {
    Properties props = new Properties()
    props.load(it)
    project.ext.versions = props
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/nvh-gel/registry")
        credentials {
            username = System.getenv("REGISTRY_USER")
            password = System.getenv("REGISTRY_TOKEN")
        }
    }
}

dependencies {
    implementation "com.eden:common-libs:${versions.common}"
    implementation "com.eden:common-data:${versions.common}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}
